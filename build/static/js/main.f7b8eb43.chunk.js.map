{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","messages","setMessages","randomNumber","setRandomNumber","useEffect","collection","doc","orderBy","onSnapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","user","rooms","setRooms","unsubscribe","snapshot","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","InsertEmoticon","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","Mic","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7b8eb43.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBQqe9accntx_y8RXjGQr2BRbKRxhbqemc\",\r\n  authDomain: \"whats-app-clone-9a5d3.firebaseapp.com\",\r\n  projectId: \"whats-app-clone-9a5d3\",\r\n  storageBucket: \"whats-app-clone-9a5d3.appspot.com\",\r\n  messagingSenderId: \"199722226316\",\r\n  appId: \"1:199722226316:web:ab3b44e36e0c563eda61a9\",\r\n  measurementId: \"G-4GL2SQ01Z6\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider }\r\nexport default db;","import React, { useEffect, useState } from 'react';\r\nimport './SidebarChat.css';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [randomNumber, setRandomNumber] = useState(\"\");\r\n    useEffect(() => {\r\n        if (id) {\r\n            db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot((onSnapshot) => setMessages(onSnapshot.docs.map((doc) => doc.data()\r\n            )))\r\n        }\r\n\r\n    }, [id])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setRandomNumber(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"please Enter name for chat room\");\r\n\r\n        if (roomName) {\r\n            // do some database stuff  ...\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${randomNumber}.svg`} />\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n\r\n    ) : (\r\n            <div onClick={createChat} className=\"sidebarChat\">\r\n                <h2>Add new Chat </h2>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { createContext, useContext, useReducer } from 'react'\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer,\r\n    initialState, children }) => (<StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport { Avatar, IconButton } from \"@material-ui/core\"\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\nfunction Sidebar() {\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n            setRooms(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n\r\n            })))\r\n        );\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    {/* <SearchOutlinedIcon /> */}\r\n                    <input placeholder=\"Search or start new chat \" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, { useEffect, useState } from 'react';\r\nimport \"./Chat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, InsertEmoticon, Mic, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [randomNumber, setRandomNumber] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        setRandomNumber(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot((snapshot) =>\r\n                setRoomName(snapshot.data().name));\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot((snapshot) => setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            );\r\n        }\r\n    }, [roomId]);\r\n\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"you typed >> \", input);\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${randomNumber}.svg`} />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p> last seen{\" \"}{\r\n                        new Date(\r\n                            messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()\r\n                    }</p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map((message) => (\r\n                    <p className={`chat__message ${message.name === user.displayName && \"  chat__reciever\"}`}>\r\n                        <span className=\"chat__name\">{message.name}\r\n                        </span>{message.message}\r\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" type='text' />\r\n                    <button onClick={sendMessage} type=\"submit\">send a message</button>\r\n                </form>\r\n                <Mic />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\nfunction Login() {\r\n    const [{ }, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then((result) => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        }).catch((error) => alert(error.message))\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"\r\n                />\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={signIn}>\r\n                    Sign In with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  // dispatch\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n          <div className=\"app__body\">\n            <Router>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/rooms/:roomId\">\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                  {/* <Chat /> */}\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n\n\n        )\n\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}\n      reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}